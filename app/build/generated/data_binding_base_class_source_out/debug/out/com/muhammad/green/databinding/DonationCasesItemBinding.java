// Generated by view binder compiler. Do not edit!
package com.muhammad.green.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.muhammad.green.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DonationCasesItemBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView detailsCaseNameTv;

  @NonNull
  public final CircleImageView detailsCasePPCImg;

  @NonNull
  public final TextView detailsCaseSurgeryTypeTv;

  @NonNull
  public final CheckBox itemCardCheckFavorite;

  private DonationCasesItemBinding(@NonNull FrameLayout rootView,
      @NonNull TextView detailsCaseNameTv, @NonNull CircleImageView detailsCasePPCImg,
      @NonNull TextView detailsCaseSurgeryTypeTv, @NonNull CheckBox itemCardCheckFavorite) {
    this.rootView = rootView;
    this.detailsCaseNameTv = detailsCaseNameTv;
    this.detailsCasePPCImg = detailsCasePPCImg;
    this.detailsCaseSurgeryTypeTv = detailsCaseSurgeryTypeTv;
    this.itemCardCheckFavorite = itemCardCheckFavorite;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DonationCasesItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DonationCasesItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.donation_cases_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DonationCasesItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.details_caseName_tv;
      TextView detailsCaseNameTv = rootView.findViewById(id);
      if (detailsCaseNameTv == null) {
        break missingId;
      }

      id = R.id.details_casePP_cImg;
      CircleImageView detailsCasePPCImg = rootView.findViewById(id);
      if (detailsCasePPCImg == null) {
        break missingId;
      }

      id = R.id.details_case_surgeryType_tv;
      TextView detailsCaseSurgeryTypeTv = rootView.findViewById(id);
      if (detailsCaseSurgeryTypeTv == null) {
        break missingId;
      }

      id = R.id.item_card_check_favorite;
      CheckBox itemCardCheckFavorite = rootView.findViewById(id);
      if (itemCardCheckFavorite == null) {
        break missingId;
      }

      return new DonationCasesItemBinding((FrameLayout) rootView, detailsCaseNameTv,
          detailsCasePPCImg, detailsCaseSurgeryTypeTv, itemCardCheckFavorite);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
