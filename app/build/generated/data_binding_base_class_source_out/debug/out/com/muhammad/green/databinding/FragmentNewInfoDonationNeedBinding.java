// Generated by view binder compiler. Do not edit!
package com.muhammad.green.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import com.muhammad.green.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentNewInfoDonationNeedBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView attachmentTitleTv;

  @NonNull
  public final CheckBox conditionsCheckbox;

  @NonNull
  public final Guideline guidelineH1;

  @NonNull
  public final Guideline guidelineV1;

  @NonNull
  public final Guideline guidelineV2;

  @NonNull
  public final EditText nwAccNdDonAgeEt;

  @NonNull
  public final TextInputLayout nwAccNdDonAgeTil;

  @NonNull
  public final MaterialButton nwAccNdDonAttachmentBtn;

  @NonNull
  public final EditText nwAccNdDonFamilyMembersEt;

  @NonNull
  public final TextInputLayout nwAccNdDonFamilyMembersTil;

  @NonNull
  public final EditText nwAccNdDonFullAddressEt;

  @NonNull
  public final TextInputLayout nwAccNdDonFullAddressTil;

  @NonNull
  public final AutoCompleteTextView nwAccNdDonGovActv;

  @NonNull
  public final TextInputLayout nwAccNdDonGovTil;

  @NonNull
  public final EditText nwAccNdDonHelpTypeEt;

  @NonNull
  public final TextInputLayout nwAccNdDonHelpTypeTil;

  @NonNull
  public final EditText nwAccNdDonIDEt;

  @NonNull
  public final TextInputLayout nwAccNdDonIDTil;

  @NonNull
  public final EditText nwAccNdDonIncomeSourceEt;

  @NonNull
  public final TextInputLayout nwAccNdDonIncomeSourceTil;

  @NonNull
  public final MaterialButton nwAccNdDonLocationBtn;

  @NonNull
  public final EditText nwAccNdDonMonthlyIncomeEt;

  @NonNull
  public final TextInputLayout nwAccNdDonMonthlyIncomeTil;

  @NonNull
  public final EditText nwAccNdDonNameEt;

  @NonNull
  public final TextInputLayout nwAccNdDonNameTil;

  @NonNull
  public final AutoCompleteTextView nwAccNdDonNationalityEt;

  @NonNull
  public final TextInputLayout nwAccNdDonNationalityTil;

  @NonNull
  public final EditText nwAccNdDonPensionTypeEt;

  @NonNull
  public final TextInputLayout nwAccNdDonPensionTypeTil;

  @NonNull
  public final EditText nwAccNdDonPhoneEt;

  @NonNull
  public final TextInputLayout nwAccNdDonPhoneTil;

  @NonNull
  public final AutoCompleteTextView regisVolCityEt;

  @NonNull
  public final TextInputLayout regisVolCityTil;

  @NonNull
  public final MaterialButton sendBtn;

  private FragmentNewInfoDonationNeedBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView attachmentTitleTv, @NonNull CheckBox conditionsCheckbox,
      @NonNull Guideline guidelineH1, @NonNull Guideline guidelineV1,
      @NonNull Guideline guidelineV2, @NonNull EditText nwAccNdDonAgeEt,
      @NonNull TextInputLayout nwAccNdDonAgeTil, @NonNull MaterialButton nwAccNdDonAttachmentBtn,
      @NonNull EditText nwAccNdDonFamilyMembersEt,
      @NonNull TextInputLayout nwAccNdDonFamilyMembersTil,
      @NonNull EditText nwAccNdDonFullAddressEt, @NonNull TextInputLayout nwAccNdDonFullAddressTil,
      @NonNull AutoCompleteTextView nwAccNdDonGovActv, @NonNull TextInputLayout nwAccNdDonGovTil,
      @NonNull EditText nwAccNdDonHelpTypeEt, @NonNull TextInputLayout nwAccNdDonHelpTypeTil,
      @NonNull EditText nwAccNdDonIDEt, @NonNull TextInputLayout nwAccNdDonIDTil,
      @NonNull EditText nwAccNdDonIncomeSourceEt,
      @NonNull TextInputLayout nwAccNdDonIncomeSourceTil,
      @NonNull MaterialButton nwAccNdDonLocationBtn, @NonNull EditText nwAccNdDonMonthlyIncomeEt,
      @NonNull TextInputLayout nwAccNdDonMonthlyIncomeTil, @NonNull EditText nwAccNdDonNameEt,
      @NonNull TextInputLayout nwAccNdDonNameTil,
      @NonNull AutoCompleteTextView nwAccNdDonNationalityEt,
      @NonNull TextInputLayout nwAccNdDonNationalityTil, @NonNull EditText nwAccNdDonPensionTypeEt,
      @NonNull TextInputLayout nwAccNdDonPensionTypeTil, @NonNull EditText nwAccNdDonPhoneEt,
      @NonNull TextInputLayout nwAccNdDonPhoneTil, @NonNull AutoCompleteTextView regisVolCityEt,
      @NonNull TextInputLayout regisVolCityTil, @NonNull MaterialButton sendBtn) {
    this.rootView = rootView;
    this.attachmentTitleTv = attachmentTitleTv;
    this.conditionsCheckbox = conditionsCheckbox;
    this.guidelineH1 = guidelineH1;
    this.guidelineV1 = guidelineV1;
    this.guidelineV2 = guidelineV2;
    this.nwAccNdDonAgeEt = nwAccNdDonAgeEt;
    this.nwAccNdDonAgeTil = nwAccNdDonAgeTil;
    this.nwAccNdDonAttachmentBtn = nwAccNdDonAttachmentBtn;
    this.nwAccNdDonFamilyMembersEt = nwAccNdDonFamilyMembersEt;
    this.nwAccNdDonFamilyMembersTil = nwAccNdDonFamilyMembersTil;
    this.nwAccNdDonFullAddressEt = nwAccNdDonFullAddressEt;
    this.nwAccNdDonFullAddressTil = nwAccNdDonFullAddressTil;
    this.nwAccNdDonGovActv = nwAccNdDonGovActv;
    this.nwAccNdDonGovTil = nwAccNdDonGovTil;
    this.nwAccNdDonHelpTypeEt = nwAccNdDonHelpTypeEt;
    this.nwAccNdDonHelpTypeTil = nwAccNdDonHelpTypeTil;
    this.nwAccNdDonIDEt = nwAccNdDonIDEt;
    this.nwAccNdDonIDTil = nwAccNdDonIDTil;
    this.nwAccNdDonIncomeSourceEt = nwAccNdDonIncomeSourceEt;
    this.nwAccNdDonIncomeSourceTil = nwAccNdDonIncomeSourceTil;
    this.nwAccNdDonLocationBtn = nwAccNdDonLocationBtn;
    this.nwAccNdDonMonthlyIncomeEt = nwAccNdDonMonthlyIncomeEt;
    this.nwAccNdDonMonthlyIncomeTil = nwAccNdDonMonthlyIncomeTil;
    this.nwAccNdDonNameEt = nwAccNdDonNameEt;
    this.nwAccNdDonNameTil = nwAccNdDonNameTil;
    this.nwAccNdDonNationalityEt = nwAccNdDonNationalityEt;
    this.nwAccNdDonNationalityTil = nwAccNdDonNationalityTil;
    this.nwAccNdDonPensionTypeEt = nwAccNdDonPensionTypeEt;
    this.nwAccNdDonPensionTypeTil = nwAccNdDonPensionTypeTil;
    this.nwAccNdDonPhoneEt = nwAccNdDonPhoneEt;
    this.nwAccNdDonPhoneTil = nwAccNdDonPhoneTil;
    this.regisVolCityEt = regisVolCityEt;
    this.regisVolCityTil = regisVolCityTil;
    this.sendBtn = sendBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentNewInfoDonationNeedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentNewInfoDonationNeedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_new_info_donation_need, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentNewInfoDonationNeedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.attachmentTitle_tv;
      TextView attachmentTitleTv = rootView.findViewById(id);
      if (attachmentTitleTv == null) {
        break missingId;
      }

      id = R.id.conditions_checkbox;
      CheckBox conditionsCheckbox = rootView.findViewById(id);
      if (conditionsCheckbox == null) {
        break missingId;
      }

      id = R.id.guideline_h1;
      Guideline guidelineH1 = rootView.findViewById(id);
      if (guidelineH1 == null) {
        break missingId;
      }

      id = R.id.guideline_v1;
      Guideline guidelineV1 = rootView.findViewById(id);
      if (guidelineV1 == null) {
        break missingId;
      }

      id = R.id.guideline_v2;
      Guideline guidelineV2 = rootView.findViewById(id);
      if (guidelineV2 == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonAge_et;
      EditText nwAccNdDonAgeEt = rootView.findViewById(id);
      if (nwAccNdDonAgeEt == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonAge_til;
      TextInputLayout nwAccNdDonAgeTil = rootView.findViewById(id);
      if (nwAccNdDonAgeTil == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonAttachment_btn;
      MaterialButton nwAccNdDonAttachmentBtn = rootView.findViewById(id);
      if (nwAccNdDonAttachmentBtn == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonFamilyMembers_et;
      EditText nwAccNdDonFamilyMembersEt = rootView.findViewById(id);
      if (nwAccNdDonFamilyMembersEt == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonFamilyMembers_til;
      TextInputLayout nwAccNdDonFamilyMembersTil = rootView.findViewById(id);
      if (nwAccNdDonFamilyMembersTil == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonFullAddress_et;
      EditText nwAccNdDonFullAddressEt = rootView.findViewById(id);
      if (nwAccNdDonFullAddressEt == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonFullAddress_til;
      TextInputLayout nwAccNdDonFullAddressTil = rootView.findViewById(id);
      if (nwAccNdDonFullAddressTil == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonGov_actv;
      AutoCompleteTextView nwAccNdDonGovActv = rootView.findViewById(id);
      if (nwAccNdDonGovActv == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonGov_til;
      TextInputLayout nwAccNdDonGovTil = rootView.findViewById(id);
      if (nwAccNdDonGovTil == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonHelpType_et;
      EditText nwAccNdDonHelpTypeEt = rootView.findViewById(id);
      if (nwAccNdDonHelpTypeEt == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonHelpType_til;
      TextInputLayout nwAccNdDonHelpTypeTil = rootView.findViewById(id);
      if (nwAccNdDonHelpTypeTil == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonID_et;
      EditText nwAccNdDonIDEt = rootView.findViewById(id);
      if (nwAccNdDonIDEt == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonID_til;
      TextInputLayout nwAccNdDonIDTil = rootView.findViewById(id);
      if (nwAccNdDonIDTil == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonIncomeSource_et;
      EditText nwAccNdDonIncomeSourceEt = rootView.findViewById(id);
      if (nwAccNdDonIncomeSourceEt == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonIncomeSource_til;
      TextInputLayout nwAccNdDonIncomeSourceTil = rootView.findViewById(id);
      if (nwAccNdDonIncomeSourceTil == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonLocation_btn;
      MaterialButton nwAccNdDonLocationBtn = rootView.findViewById(id);
      if (nwAccNdDonLocationBtn == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonMonthlyIncome_et;
      EditText nwAccNdDonMonthlyIncomeEt = rootView.findViewById(id);
      if (nwAccNdDonMonthlyIncomeEt == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonMonthlyIncome_til;
      TextInputLayout nwAccNdDonMonthlyIncomeTil = rootView.findViewById(id);
      if (nwAccNdDonMonthlyIncomeTil == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonName_et;
      EditText nwAccNdDonNameEt = rootView.findViewById(id);
      if (nwAccNdDonNameEt == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonName_til;
      TextInputLayout nwAccNdDonNameTil = rootView.findViewById(id);
      if (nwAccNdDonNameTil == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonNationality_et;
      AutoCompleteTextView nwAccNdDonNationalityEt = rootView.findViewById(id);
      if (nwAccNdDonNationalityEt == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonNationality_til;
      TextInputLayout nwAccNdDonNationalityTil = rootView.findViewById(id);
      if (nwAccNdDonNationalityTil == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonPensionType_et;
      EditText nwAccNdDonPensionTypeEt = rootView.findViewById(id);
      if (nwAccNdDonPensionTypeEt == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonPensionType_til;
      TextInputLayout nwAccNdDonPensionTypeTil = rootView.findViewById(id);
      if (nwAccNdDonPensionTypeTil == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonPhone_et;
      EditText nwAccNdDonPhoneEt = rootView.findViewById(id);
      if (nwAccNdDonPhoneEt == null) {
        break missingId;
      }

      id = R.id.nwAccNdDonPhone_til;
      TextInputLayout nwAccNdDonPhoneTil = rootView.findViewById(id);
      if (nwAccNdDonPhoneTil == null) {
        break missingId;
      }

      id = R.id.regisVolCity_et;
      AutoCompleteTextView regisVolCityEt = rootView.findViewById(id);
      if (regisVolCityEt == null) {
        break missingId;
      }

      id = R.id.regisVolCity_til;
      TextInputLayout regisVolCityTil = rootView.findViewById(id);
      if (regisVolCityTil == null) {
        break missingId;
      }

      id = R.id.send_btn;
      MaterialButton sendBtn = rootView.findViewById(id);
      if (sendBtn == null) {
        break missingId;
      }

      return new FragmentNewInfoDonationNeedBinding((ConstraintLayout) rootView, attachmentTitleTv,
          conditionsCheckbox, guidelineH1, guidelineV1, guidelineV2, nwAccNdDonAgeEt,
          nwAccNdDonAgeTil, nwAccNdDonAttachmentBtn, nwAccNdDonFamilyMembersEt,
          nwAccNdDonFamilyMembersTil, nwAccNdDonFullAddressEt, nwAccNdDonFullAddressTil,
          nwAccNdDonGovActv, nwAccNdDonGovTil, nwAccNdDonHelpTypeEt, nwAccNdDonHelpTypeTil,
          nwAccNdDonIDEt, nwAccNdDonIDTil, nwAccNdDonIncomeSourceEt, nwAccNdDonIncomeSourceTil,
          nwAccNdDonLocationBtn, nwAccNdDonMonthlyIncomeEt, nwAccNdDonMonthlyIncomeTil,
          nwAccNdDonNameEt, nwAccNdDonNameTil, nwAccNdDonNationalityEt, nwAccNdDonNationalityTil,
          nwAccNdDonPensionTypeEt, nwAccNdDonPensionTypeTil, nwAccNdDonPhoneEt, nwAccNdDonPhoneTil,
          regisVolCityEt, regisVolCityTil, sendBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
