// Generated by view binder compiler. Do not edit!
package com.muhammad.green.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewpager.widget.ViewPager;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.tabs.TabLayout;
import com.muhammad.green.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLandingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FrameLayout fragmentView;

  @NonNull
  public final ConstraintLayout introView;

  @NonNull
  public final MaterialButton landingLoginBtn;

  @NonNull
  public final MaterialButton landingSkipBtn;

  @NonNull
  public final ViewPager pagerIntroSlider;

  @NonNull
  public final FragmentContainerView starterFragment;

  @NonNull
  public final TabLayout tabs;

  private ActivityLandingBinding(@NonNull ConstraintLayout rootView,
      @NonNull FrameLayout fragmentView, @NonNull ConstraintLayout introView,
      @NonNull MaterialButton landingLoginBtn, @NonNull MaterialButton landingSkipBtn,
      @NonNull ViewPager pagerIntroSlider, @NonNull FragmentContainerView starterFragment,
      @NonNull TabLayout tabs) {
    this.rootView = rootView;
    this.fragmentView = fragmentView;
    this.introView = introView;
    this.landingLoginBtn = landingLoginBtn;
    this.landingSkipBtn = landingSkipBtn;
    this.pagerIntroSlider = pagerIntroSlider;
    this.starterFragment = starterFragment;
    this.tabs = tabs;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLandingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLandingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_landing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLandingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fragment_view;
      FrameLayout fragmentView = rootView.findViewById(id);
      if (fragmentView == null) {
        break missingId;
      }

      id = R.id.intro_view;
      ConstraintLayout introView = rootView.findViewById(id);
      if (introView == null) {
        break missingId;
      }

      id = R.id.landingLogin_btn;
      MaterialButton landingLoginBtn = rootView.findViewById(id);
      if (landingLoginBtn == null) {
        break missingId;
      }

      id = R.id.landingSkip_btn;
      MaterialButton landingSkipBtn = rootView.findViewById(id);
      if (landingSkipBtn == null) {
        break missingId;
      }

      id = R.id.pagerIntroSlider;
      ViewPager pagerIntroSlider = rootView.findViewById(id);
      if (pagerIntroSlider == null) {
        break missingId;
      }

      id = R.id.starter_fragment;
      FragmentContainerView starterFragment = rootView.findViewById(id);
      if (starterFragment == null) {
        break missingId;
      }

      id = R.id.tabs;
      TabLayout tabs = rootView.findViewById(id);
      if (tabs == null) {
        break missingId;
      }

      return new ActivityLandingBinding((ConstraintLayout) rootView, fragmentView, introView,
          landingLoginBtn, landingSkipBtn, pagerIntroSlider, starterFragment, tabs);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
