// Generated by view binder compiler. Do not edit!
package com.muhammad.green.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import com.muhammad.green.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentVolInKindDonationsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton DonateNewDeviceBtn;

  @NonNull
  public final Guideline guidelineH1;

  @NonNull
  public final AutoCompleteTextView inKindDonDeviceTypeActv;

  @NonNull
  public final TextInputLayout inKindDonDeviceTypeTil;

  @NonNull
  public final RecyclerView inKindDonElectricRv;

  @NonNull
  public final SearchView inKindDonSearchV;

  private FragmentVolInKindDonationsBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton DonateNewDeviceBtn, @NonNull Guideline guidelineH1,
      @NonNull AutoCompleteTextView inKindDonDeviceTypeActv,
      @NonNull TextInputLayout inKindDonDeviceTypeTil, @NonNull RecyclerView inKindDonElectricRv,
      @NonNull SearchView inKindDonSearchV) {
    this.rootView = rootView;
    this.DonateNewDeviceBtn = DonateNewDeviceBtn;
    this.guidelineH1 = guidelineH1;
    this.inKindDonDeviceTypeActv = inKindDonDeviceTypeActv;
    this.inKindDonDeviceTypeTil = inKindDonDeviceTypeTil;
    this.inKindDonElectricRv = inKindDonElectricRv;
    this.inKindDonSearchV = inKindDonSearchV;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentVolInKindDonationsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentVolInKindDonationsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_vol_in_kind_donations, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentVolInKindDonationsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.DonateNewDevice_btn;
      MaterialButton DonateNewDeviceBtn = rootView.findViewById(id);
      if (DonateNewDeviceBtn == null) {
        break missingId;
      }

      id = R.id.guideline_h1;
      Guideline guidelineH1 = rootView.findViewById(id);
      if (guidelineH1 == null) {
        break missingId;
      }

      id = R.id.inKindDonDeviceType_actv;
      AutoCompleteTextView inKindDonDeviceTypeActv = rootView.findViewById(id);
      if (inKindDonDeviceTypeActv == null) {
        break missingId;
      }

      id = R.id.inKindDonDeviceType_til;
      TextInputLayout inKindDonDeviceTypeTil = rootView.findViewById(id);
      if (inKindDonDeviceTypeTil == null) {
        break missingId;
      }

      id = R.id.inKindDonElectric_rv;
      RecyclerView inKindDonElectricRv = rootView.findViewById(id);
      if (inKindDonElectricRv == null) {
        break missingId;
      }

      id = R.id.inKindDon_searchV;
      SearchView inKindDonSearchV = rootView.findViewById(id);
      if (inKindDonSearchV == null) {
        break missingId;
      }

      return new FragmentVolInKindDonationsBinding((ConstraintLayout) rootView, DonateNewDeviceBtn,
          guidelineH1, inKindDonDeviceTypeActv, inKindDonDeviceTypeTil, inKindDonElectricRv,
          inKindDonSearchV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
